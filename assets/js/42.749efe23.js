(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{410:function(e,t,r){"use strict";r.r(t);var v=r(44),a=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"docker深度学习环境配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker深度学习环境配置"}},[e._v("#")]),e._v(" Docker深度学习环境配置")]),e._v(" "),r("p",[e._v("Author：郭必扬\nTime：2019-05-02")]),e._v(" "),r("h3",{attrs:{id:"why-docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#why-docker"}},[e._v("#")]),e._v(" Why Docker？")]),e._v(" "),r("p",[e._v("导师提供了一台高性能GPU机器，但是装系统的老师对深度学习不大了解，所以环境需要我自己安装。在折腾了一两周后若干次失败后，我是在忍不住发了一条朋友圈：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615888380-image.png",alt:""}})]),e._v(" "),r("p",[e._v("评论也是十分热烈，激起了大家的共鸣：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615895772-image.png",alt:""}})]),e._v(" "),r("p",[e._v("但是，在茫茫评论中，一位大佬留言：")]),e._v(" "),r("p",[r("strong",[e._v("“docker了解一下”")])]),e._v(" "),r("p",[e._v("顿时给我一线希望。docker这个玩意儿之前也听说过，但是一直没去一探究竟，因为一直没有痛点。这一次装环境可让我深深体会到这个痛点。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615906032-image.png",alt:""}})]),e._v(" "),r("p",[e._v("我们为什么学编程的时候，一提到配置环境就头疼？因为没有一个确定的安装流程可以保证你的环境安装不出错。每一个人的电脑都不同，软硬件环境都不一样，所以可能同样的步骤在我这里可以顺利安装好，但是到你那里就各种bug满天飞。\nDocker这个玩意儿，就是专门解决这个痛点的。大家把自己配置好的环境打包成镜像，我们可以直接使用别人的镜像，进入镜像之后，就进入了别人搭建好的环境，我们只需要提供硬件支持即可。这个就相当于一个虚拟机，我们可以在Windows系统里安装一个linux的虚拟机，但是docker相比虚拟机来说占用内存更小，转移起来更加方便。")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("写下上面这些话时，我使用docker也有几周了，刚开始对docker的各种操作很懵逼，所以决定记录下来经常使用的各种操作和对应的说明，方便日后的使用。后来发现记录的还挺不错，所以决定整理成体系分享给大家。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("注:")]),e._v("\n本文的安装、使用，均在"),r("strong",[e._v("Linux-Ubuntu")]),e._v("系统下进行。不同系统安装过程会有不同，但是安装好后的操作基本相同。")])]),e._v(" "),r("h2",{attrs:{id:"一、docker、深度学习镜像、nvidia-docker的安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、docker、深度学习镜像、nvidia-docker的安装"}},[e._v("#")]),e._v(" 一、Docker、深度学习镜像、Nvidia-docker的安装")]),e._v(" "),r("p",[e._v("安装这种事儿，真不想详细写。因为这里确实没有很多坑。")]),e._v(" "),r("h4",{attrs:{id:"_1-docker的安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker的安装"}},[e._v("#")]),e._v(" 1. Docker的安装")]),e._v(" "),r("p",[e._v("链接：https://docs.docker.com/install/linux/docker-ce/ubuntu/\n跟着教程一路复制粘贴回车即可。\n唯一的难点就是看懂英文的安装教程，看清楚段落层次结构。")]),e._v(" "),r("p",[e._v("反正，最后如果你运行"),r("code",[e._v("sudo docker run hello-world")]),e._v("，可以跑通，看到：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615920252-image.png",alt:""}})]),e._v(" "),r("p",[e._v("就说明Docker已经被你成功安装了！")]),e._v(" "),r("h4",{attrs:{id:"_2-nvidia-docker的安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-nvidia-docker的安装"}},[e._v("#")]),e._v(" 2. Nvidia-docker的安装")]),e._v(" "),r("p",[e._v("为何又蹦出来一个nvidia-docker？因为原本的docker不支持GPU加速，所以NVIDIA单独做了一个docker，来让docker镜像可以使用NVIDIA的gpu。\n链接： https://github.com/NVIDIA/nvidia-docker\n也是直接找对应的操作系统的命令，一行行复制粘贴回车就搞定了。")]),e._v(" "),r("p",[e._v("反正，最后当你运行"),r("code",[e._v("docker run --runtime=nvidia --rm nvidia/cuda:9.0-base nvidia-smi")]),e._v("时，如果看到：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615929769-image.png",alt:""}})]),e._v(" "),r("p",[e._v("恭喜，安装成功了！")]),e._v(" "),r("h4",{attrs:{id:"_3-深度学习镜像的安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-深度学习镜像的安装"}},[e._v("#")]),e._v(" 3. 深度学习镜像的安装")]),e._v(" "),r("p",[e._v("我这里使用镜像是"),r("strong",[e._v("deepo")]),e._v("一款咱们中国人做出来的深度学习镜像，包含了现在多数流行的深度学习框架，而且版本也很新，所以我这个小白第一次就选择了这个。\n链接：https://hub.docker.com/r/ufoym/deepo\n只有安装好了前面的docker和nvidia-docker，这里就很方便了。\n直接通过命令"),r("code",[e._v("docker pull ufoym/deepo")]),e._v("就可以把各种框架都下载下来。但是这样比较大，费时较长，所以教程里面也提供了值安装某一种框架的方式：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615940586-image.png",alt:""}})]),e._v(" "),r("p",[e._v("另外，还提供了jupyter notebook版的镜像，我这里就是安装的这个，因为我日常基本都是使用jupyter notebook，这里贴一下我的命令：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("sudo docker pull ufoym/deepo:all-jupyter-py36-cu100\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("这里的"),r("code",[e._v("all-jupyter-py36-cu100")]),e._v("也是deepo提供的jupyter notebook镜像的tag。\n安装好之后，通过"),r("code",[e._v("docker images")]),e._v("命令，可以查看已经下载好的镜像：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615948308-image.png",alt:""}})]),e._v(" "),r("p",[e._v("好了，该装的东西都装好了，下面进入操作部分了！")]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"二、docker最常用操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、docker最常用操作"}},[e._v("#")]),e._v(" 二、Docker最常用操作")]),e._v(" "),r("h3",{attrs:{id:"一-基本概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-基本概念"}},[e._v("#")]),e._v(" （一）基本概念")]),e._v(" "),r("p",[e._v("image，镜像，是一个个配置好的环境。\ncontainer，容器，是image的具体实例。\nimage和container的关系，相当于面向对象中类与对象的关系。")]),e._v(" "),r("p",[r("strong",[e._v("如何查询命令参数：")]),e._v(" "),r("code",[e._v("docker")]),e._v("可以看docker客户端有那些基本命令；\n对应每一条命令，想看看具体是做什么的，可以在后面加一个"),r("code",[e._v("--help")]),e._v("查看具体用法，例如对于run命令：\n"),r("code",[e._v("docker run --help")])]),e._v(" "),r("h3",{attrs:{id:"二-容器的相关操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-容器的相关操作"}},[e._v("#")]),e._v(" （二）容器的相关操作")]),e._v(" "),r("h4",{attrs:{id:"_1-容器的创建、查看、删除"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-容器的创建、查看、删除"}},[e._v("#")]),e._v(" 1.容器的创建、查看、删除")]),e._v(" "),r("p",[r("code",[e._v("docker run [-it] some-image")]),e._v(" 创建某个镜像的容器。"),r("strong",[e._v("注意，同一个镜像可以通过这种方式创建任意多个container.")]),e._v("\n加上"),r("code",[e._v("-it")]),e._v("之后，可以创建之后，马上进入交互模式。")]),e._v(" "),r("p",[r("code",[e._v("docker ps")]),e._v("列出当前运行的容器")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615956747-image.png",alt:""}})]),e._v(" "),r("p",[r("code",[e._v("docker ps -a")]),e._v("列出所有的容器，包括运行的和不运行的")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615963725-image.png",alt:""}})]),e._v(" "),r("p",[r("code",[e._v("docker rm container-id")]),e._v("删除某个容器")]),e._v(" "),r("h4",{attrs:{id:"_2-容器的启动、进入、退出"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-容器的启动、进入、退出"}},[e._v("#")]),e._v(" 2.容器的启动、进入、退出：")]),e._v(" "),r("p",[r("code",[e._v("docker start [-i] container-id")]),r("strong",[e._v("启动")]),e._v("某个容器，必须是已经创建的。\n加上"),r("code",[e._v("-i")]),e._v(" 参数之后，可以直接"),r("strong",[e._v("进入")]),e._v("交互模式：")]),e._v(" "),r("p",[e._v("注意到，交互模式下前缀会变化：\n"),r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615984226-image.png",alt:""}})]),e._v(" "),r("p",[e._v("除了通过"),r("code",[e._v("-i")]),r("strong",[e._v("进入")]),e._v("交互模式，还有一种方法，那就是通过"),r("code",[e._v("attach")]),e._v(":\n"),r("code",[e._v("docker attach container-id")])]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624615998363-image.png",alt:""}})]),e._v(" "),r("p",[e._v("进入交互模式之后，怎么"),r("strong",[e._v("退出")]),e._v("呢：")]),e._v(" "),r("ul",[r("li",[e._v("想退出但是保持容器运行，按"),r("code",[e._v("CTRL+Q+P")]),e._v("三个键")]),e._v(" "),r("li",[e._v("退出，并关闭停止容器，按"),r("code",[e._v("CTRL+D")]),e._v("或者输入"),r("code",[e._v("exit")]),e._v("再回车")])]),e._v(" "),r("p",[e._v("注：Ctrl+P+Q按的时候有时候会不灵，多按几次！")]),e._v(" "),r("p",[e._v("容器的停止、重启：\n"),r("code",[e._v("docker stop container-id")]),e._v(" "),r("code",[e._v("docker restart container-id")])]),e._v(" "),r("h3",{attrs:{id:"三-docker-jupyter-notebook-服务-力荐"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-docker-jupyter-notebook-服务-力荐"}},[e._v("#")]),e._v(" （三）Docker jupyter notebook 服务 [力荐!]")]),e._v(" "),r("p",[e._v("深度学习jupyter notebook镜像已经创建：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624616007523-image.png",alt:""}})]),e._v(" "),r("h4",{attrs:{id:"_1-如何创建自己的可以远程访问的容器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何创建自己的可以远程访问的容器"}},[e._v("#")]),e._v(" 1.如何创建自己的可以远程访问的容器：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("sudo nvidia-docker run -it -p 7777:8888 --ipc=host -v /home/shcd/Documents/gby:/gby --name gby-notebook  90be7604e476\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("其中：")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("-it")]),e._v("为直接进入交互式")]),e._v(" "),r("li",[r("code",[e._v("-p 7777:8888")]),e._v("是把主机的7777端口映射到容器的8888端口")]),e._v(" "),r("li",[r("code",[e._v("-ipc=host")]),e._v("可以让容器与主机共享内存")]),e._v(" "),r("li",[e._v("还可以加一个"),r("code",[e._v("--name xxxxx")]),e._v("给容器定义一个个性化名字")]),e._v(" "),r("li",[r("code",[e._v("-v /home/shcd/Documents/gby:/gby")]),e._v("可以讲主机上的/home/shcd/Documents/gby地址挂载到容器里，并命名为/data文件夹，这样这个文件夹的内容可以在容器和主机之间共享了。因为容器一旦关闭，容器中的所有改动都会清除，所以这样挂载一个地址可以吧容器内的数据保存到本地。")]),e._v(" "),r("li",[r("code",[e._v("90be7604e476")]),e._v("则是你安装的jupyter镜像的id，可以在刚刚docker images命令后面查看，当然你也可以直接写全名"),r("code",[e._v("ufoym/deepo:all-py36-jupyter")])])]),e._v(" "),r("p",[e._v("经过上面的操作，你应该可以直接进入容器了，这时你用"),r("code",[e._v("ls")]),e._v("命令，应该可以看到一个新的文件夹gby产生了！")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624616016228-image.png",alt:""}})]),e._v(" "),r("h4",{attrs:{id:"_2-创建了容器之后-我们可以进而启动jupyter-notebook"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建了容器之后-我们可以进而启动jupyter-notebook"}},[e._v("#")]),e._v(" 2.创建了容器之后，我们可以进而启动jupyter notebook：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir='/gby'\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("其中：")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("--no-browser")]),e._v("即不通过浏览器启动，"),r("code",[e._v("--ip")]),e._v("指定容器的ip，"),r("code",[e._v("--allow-root")]),e._v("允许root模型运行")]),e._v(" "),r("li",[r("code",[e._v("--NotebookApp.token")]),e._v("可以指定jupyter 登录密码，可以为空")]),e._v(" "),r("li",[r("code",[e._v("--notebook-dir='/gby'")]),e._v("指定jupyter的根目录")])]),e._v(" "),r("h4",{attrs:{id:"_3-开启本地与服务器的端口映射-从而远程登录jupyter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-开启本地与服务器的端口映射-从而远程登录jupyter"}},[e._v("#")]),e._v(" 3.开启本地与服务器的端口映射，从而远程登录jupyter：")]),e._v(" "),r("p",[e._v("在"),r("strong",[e._v("本地机器")]),e._v("上，执行如下命令：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(" ssh username@host-ip -L 1234:127.0.0.1:7777\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("这样，可以将本地的1234端口，映射到服务器的localhost的7777端口（即你前面创建jupyter容器时候的指定的服务器端口）\n这样，你在本地电脑的浏览器里输入'localhost:1234'，即可登录到服务器上的jupyter notebook了！")]),e._v(" "),r("p",[e._v("服务器的jupyter容器内我的文件夹：\n"),r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624616030322-image.png",alt:""}})]),e._v(" "),r("p",[e._v("本地访问服务器jupyter：\n"),r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/beyondguo/mdnice_pictures/2021-6-25/1624616045632-image.png",alt:""}})]),e._v(" "),r("p",[e._v("当我第一次看到这个画面的时候，简直激动地要跳起来！\n"),r("strong",[e._v("既能远程访问高性能服务器，又可以像在本地一样便捷地操作")]),e._v("，你说激动不激动你说激动不激动？")]),e._v(" "),r("h3",{attrs:{id:"四-容器的备份"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-容器的备份"}},[e._v("#")]),e._v(" （四）容器的备份")]),e._v(" "),r("p",[e._v("之前好不容易配置好的环境，突然被学校服务器要重装！？怎么办？\n你想到的一定是："),r("strong",[e._v("能不能把配置好的环境备份一份，后面直接重新加载进来？")])]),e._v(" "),r("p",[e._v("方法也很简单：\n一般情况下，我们想备份的是容器，因为我们具体的配置都是在容器中进行的，而镜像一般都是直接在网上下载的，我们不做什么改动。")]),e._v(" "),r("p",[e._v("先通过"),r("code",[e._v("docker ps")]),e._v("或者"),r("code",[e._v("docker ps -a")]),e._v("来查看你想备份的容器的id，\n然后通过：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker commit -p [your-container-id] [your-backup-name]\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("来将id为your-container-id的容器创建成一个镜像快照。")]),e._v(" "),r("p",[e._v("接着，你通过"),r("code",[e._v("docker images")]),e._v("就可以查看到刚刚创建好的镜像快照了。\n然后，通过：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker save -o [path-you-want-to-save/your-backup-name.tar]] [your-backup-name]\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("把那个镜像打包成tar文件，保存到服务器上。\n后面就可以把服务器上打包好的tar文件，下载到本地了。")]),e._v(" "),r("p",[e._v("恢复：\n"),r("code",[e._v("docker load -i your-backup-name.tar")]),e._v(" "),r("code",[e._v("docker run -d -p 80:80 your-backup-name")])]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("以上就是我目前使用到的最常用的用法了，至少对我目前的需求来说是够用了，随着我使用次数的变多，我也会不断更新。希望能够减少大家在环境搭建之路上的折磨吧！")])])}),[],!1,null,null,null);t.default=a.exports}}]);